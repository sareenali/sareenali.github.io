<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Sareen Ali</title>
    <link>/post/</link>
    <description>Recent content in Posts on Sareen Ali</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 08 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using R and Python Together </title>
      <link>/post/2021/05/08/using-r-and-python-together/</link>
      <pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/08/using-r-and-python-together/</guid>
      <description>Have you ever wanted to see how a word looks scrambled up? Maybe not, but STILL python can do this.
first = &amp;quot;Sareen&amp;quot; last = &amp;quot;Ali&amp;quot; first + last ## &amp;#39;SareenAli&amp;#39; last[0]+first[1:]+ &amp;#39; &amp;#39; +first[0]+last[1:] ## &amp;#39;Aareen Sli&amp;#39; 2*(first[0:4]+last[-4:])  ## &amp;#39;SareAliSareAli&amp;#39; It’s kinda funny.
Here’s how the two interact
# R chunk heyy &amp;lt;- &amp;quot;Hey there&amp;quot; library(reticulate) #Python Code Chunk hey = &amp;quot;people&amp;quot; print(r.heyy,hey) ## Hey there people #R chunk cat(c(heyy,py$hey)) ## Hey there people Here’s an example from the slides using numbers.</description>
    </item>
    
  </channel>
</rss>
